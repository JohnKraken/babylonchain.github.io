"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[2313],{3905:(e,t,n)=>{n.d(t,{Zo:()=>y,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},y=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,y=u(e,["components","mdxType","originalType","parentName"]),c=s(n),p=a,b=c["".concat(i,".").concat(p)]||c[p]||d[p]||o;return n?r.createElement(b,l(l({ref:t},y),{},{components:n})):r.createElement(b,l({ref:t},y))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=c;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:a,l[1]=u;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7263:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={id:"babylond_query_authz_grants",sidebar_label:"Babylond_query_authz_grants",hide_table_of_contents:!0},l="Babylond Query authz grants",u={unversionedId:"cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants",id:"cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants",title:"Babylond Query authz grants",description:"Querying grans for a granter-grantee pair and optionally a msg-type-url.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_authz",slug:"/cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants.md",tags:[],version:"current",frontMatter:{id:"babylond_query_authz_grants",sidebar_label:"Babylond_query_authz_grants",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"Babylond_query_authz",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_authz"},next:{title:"Babylond_query_authz_grants_by_grantee",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_grantee"}},i={},s=[{value:"query authz grants command",id:"query-authz-grants-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}],y={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"babylond-query-authz-grants"},"Babylond Query authz grants"),(0,a.kt)("p",null,"Querying grans for a granter-grantee pair and optionally a msg-type-url."),(0,a.kt)("h2",{id:"query-authz-grants-command"},"query authz grants command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"babylond query authz grants [granter-addr] [grantee-addr] [msg-type-url]? [flags]\n")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'      --count-total       count total number of records in grants to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for grants\n      --limit uint        pagination limit of grants to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of grants to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of grants to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of grants to query for\n      --reverse           results are sorted in descending order\n')),(0,a.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options Inherited from Parent Commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'--chain-id string     The network chain ID\n--home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n--log_format string   The logging format (json|plain) (default "plain")\n--log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n--trace               print out full stack trace on errors\n')))}d.isMDXComponent=!0}}]);