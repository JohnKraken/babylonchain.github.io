"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[3217],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,y=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(y,r(r({ref:t},p),{},{components:n})):a.createElement(y,r({ref:t},p))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var u=2;u<o;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},89803:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=n(87462),l=(n(67294),n(3905));const o={id:"installation",sidebar_label:"Installation Guide",hide_table_of_contents:!0,pagination_prev:null,pagination_next:null,custom_edit_url:null},r="Installation Guide",i={unversionedId:"installation",id:"installation",title:"Installation Guide",description:"This article provides an overview of installing and initializing the Babylon chain on your system.",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/docs/installation",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"installation",sidebar_label:"Installation Guide",hide_table_of_contents:!0,pagination_prev:null,pagination_next:null,custom_edit_url:null},sidebar:"docs"},s={},u=[{value:'Step 1: Install Golang <a id="step1"></a>',id:"step-1-install-golang-",level:2},{value:'Step 2: Build and install Babylon <a id="step2"></a>',id:"step-2-build-and-install-babylon-",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"installation-guide"},"Installation Guide"),(0,l.kt)("p",null,"This article provides an overview of installing and initializing the Babylon chain on your system."),(0,l.kt)("p",null,"In this article:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#step1"},"Step 1: Install Golang")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#step2"},"Step 2: Build and Install Babylon"))),(0,l.kt)("h2",{id:"step-1-install-golang-"},"Step 1: Install Golang ",(0,l.kt)("a",{id:"step1"})),(0,l.kt)("admonition",{title:"Note",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Babylon requires Golang ",(0,l.kt)("a",{parentName:"p",href:"https://go.dev/doc/install"},"version 1.19")," for Babylon to be installed on your system.\nInstall it using the instructions on the provided link.")),(0,l.kt)("p",null,"After you install it, you can verify that you have the proper version by running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"$ go version\ngo version go1.19 darwin/amd64\n")),(0,l.kt)("h2",{id:"step-2-build-and-install-babylon-"},"Step 2: Build and install Babylon ",(0,l.kt)("a",{id:"step2"})),(0,l.kt)("p",null,"You need to clone Babylon\u2019s GitHub repository to install the ",(0,l.kt)("inlineCode",{parentName:"p"},"babylond")," executable."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Install build requirements")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"sudo apt install git build-essential ufw curl jq snapd --yes\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Retrieve the Babylon source code either through the ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/babylonchain/babylon/releases"},"releases page")," or by cloning the ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/babylonchain/babylon"},"source code"),". In case you want to create a full node for the testnet, it is highly recommended that you choose the release corresponding to the current testnet. See the ",(0,l.kt)("a",{parentName:"li",href:"/docs/testnet/network-information"},"testnet network information")," page for more details."),(0,l.kt)("li",{parentName:"ol"},"Navigate to the directory that contains the Babylon source code. From there build and install the babylond executable")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"git checkout <version_to_install>\nmake install\n")),(0,l.kt)("admonition",{title:"Note",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"The last command first executes ",(0,l.kt)("inlineCode",{parentName:"p"},"git checkout")," in the specific version that you want to install.\nEnsure that you install the same version of the Babylon executable as the one that is running on the network you aim to join.")))}c.isMDXComponent=!0}}]);